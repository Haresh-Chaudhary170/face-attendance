import dlib
import cv2

def mark_face_with_square(image, face):
    x, y, w, h = face.left(), face.top(), face.width(), face.height()
    cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2)

def main():
    # Load the pre-trained HOG face detector from dlib
    face_detector = dlib.get_frontal_face_detector()

    # Open a video capture object (0 is usually the default camera, but you can change it if necessary)
    video_capture = cv2.VideoCapture(0)

    while True:
        # Read a frame from the video feed
        ret, frame = video_capture.read()

        # Convert the frame to grayscale (dlib face detector requires grayscale images)
        gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

        # Detect faces using the HOG detector
        faces = face_detector(gray_frame)

        # Mark each detected face with a square
        for face in faces:
            mark_face_with_square(frame, face)

        # Display the result
        cv2.imshow('Facial Recognition with HOG', frame)

        # Break the loop when 'q' is pressed
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    # Release the video capture and close the OpenCV windows
    video_capture.release()
    cv2.destroyAllWindows()

if __name__ == "__main__":
    main()
